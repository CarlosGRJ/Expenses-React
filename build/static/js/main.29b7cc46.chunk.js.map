{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","hooks/useForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","children","classes","className","ExpensesFilter","onChangeFilter","selected","value","onChange","event","target","ExpenseDate","date","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","props","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPoints","dataPointValues","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","onSaveExpenseData","onCancel","initialState","values","setValues","prevState","name","useForm","enteredTitle","enteredAmount","enteredDate","formValues","handleInputChange","reset","onSubmit","preventDefault","expenseData","Date","type","min","step","onClick","NewExpense","onAddExpense","isEditing","setIsEditing","enteredExpenseData","random","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29b7cc46.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nexport const Card = ({ children, className }) => {\r\n   const classes = 'card ' + className;\r\n   return <div className={classes}>{children}</div>;\r\n};\r\n","import React from 'react';\r\nimport './ExpensesFilter.css';\r\n\r\nexport const ExpensesFilter = ({ onChangeFilter, selected }) => {\r\n   const dropdownChangeHandler = (event) => {\r\n      onChangeFilter(event.target.value);\r\n   };\r\n\r\n   return (\r\n      <div className='expenses-filter'>\r\n         <div className='expenses-filter__control'>\r\n            <label>Filter by year</label>\r\n            <select value={selected} onChange={dropdownChangeHandler}>\r\n               <option value='2022'>2022</option>\r\n               <option value='2021'>2021</option>\r\n               <option value='2020'>2020</option>\r\n               <option value='2019'>2019</option>\r\n            </select>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n","import React from 'react';\r\nimport './ExpenseDate.css';\r\n\r\nexport const ExpenseDate = ({date}) => {\r\n   const month = date.toLocaleString('en-US', { month: 'long' });\r\n   const day = date.toLocaleString('en-US', { day: '2-digit' });\r\n   const year = date.getFullYear();\r\n\r\n   return (\r\n      <div className='expense-date'>\r\n         <div className='expense-date__month'>{month}</div>\r\n         <div className='expense-date__day'>{day}</div>\r\n         <div className='expense-date__year'>{year}</div>\r\n      </div>\r\n   );\r\n};\r\n","import React from 'react';\r\nimport { Card } from '../UI/Card';\r\nimport { ExpenseDate } from './ExpenseDate';\r\nimport './ExpenseItem.css';\r\n\r\nexport const ExpenseItem = ({ title, amount, date }) => {\r\n   return (\r\n      <li>\r\n         <Card className='expense-item'>\r\n            <ExpenseDate date={date} />\r\n\r\n            <div className='expense-item__description'>\r\n               <h2>{title}</h2>\r\n               <div className='expense-item__price'>${amount}</div>\r\n            </div>\r\n         </Card>\r\n      </li>\r\n   );\r\n};\r\n","import React from 'react';\r\n\r\nimport { ExpenseItem } from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nexport const ExpensesList = ({ items }) => {\r\n   if (items.length === 0) {\r\n      return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n   }\r\n\r\n   return (\r\n      <ul className='expenses-list'>\r\n         {items.map((expense) => (\r\n            <ExpenseItem\r\n               key={expense.id}\r\n               title={expense.title}\r\n               amount={expense.amount}\r\n               date={expense.date}\r\n            />\r\n         ))}\r\n      </ul>\r\n   );\r\n};\r\n","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nexport const ChartBar = (props) => {\r\n   let barFillHeight = '0%';\r\n\r\n   if (props.maxValue > 0) {\r\n      barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n   }\r\n\r\n   return (\r\n      <div className='chart-bar'>\r\n         <div className='chart-bar__inner'>\r\n            <div\r\n               className='chart-bar__fill'\r\n               style={{ height: barFillHeight }}></div>\r\n         </div>\r\n         <div className='chart-bar__label'>{props.label}</div>\r\n      </div>\r\n   );\r\n};\r\n","import React from 'react';\r\n\r\nimport './Chart.css';\r\nimport { ChartBar } from './ChartBar';\r\n\r\nexport const Chart = ({ dataPoints }) => {\r\n   const dataPointValues = dataPoints.map((dataPoint) => dataPoint.value);\r\n   const totalMaximum = Math.max(...dataPointValues);\r\n\r\n   return (\r\n      <div className='chart'>\r\n         {dataPoints.map((dataPoint) => (\r\n            <ChartBar\r\n               key={dataPoint.label}\r\n               value={dataPoint.value}\r\n               maxValue={totalMaximum}\r\n               label={dataPoint.label}\r\n            />\r\n         ))}\r\n      </div>\r\n   );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Chart } from '../Chart/Chart';\r\n\r\nexport const ExpensesChart = (props) => {\r\n   const chartDataPoints = [\r\n      { label: 'Jan', value: 0 },\r\n      { label: 'Feb', value: 0 },\r\n      { label: 'Mar', value: 0 },\r\n      { label: 'Apr', value: 0 },\r\n      { label: 'May', value: 0 },\r\n      { label: 'Jun', value: 0 },\r\n      { label: 'Jul', value: 0 },\r\n      { label: 'Aug', value: 0 },\r\n      { label: 'Sep', value: 0 },\r\n      { label: 'Oct', value: 0 },\r\n      { label: 'Nov', value: 0 },\r\n      { label: 'Dec', value: 0 },\r\n   ];\r\n\r\n   for (const expense of props.expenses) {\r\n      const expenseMonth = expense.date.getMonth();\r\n      chartDataPoints[expenseMonth].value += expense.amount;\r\n   }\r\n\r\n   return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Card } from '../UI/Card';\r\nimport { ExpensesFilter } from './ExpensesFilter';\r\nimport { ExpensesList } from './ExpensesList';\r\nimport './Expenses.css';\r\nimport { ExpensesChart } from './ExpensesChart';\r\n\r\nexport const Expenses = ({ items }) => {\r\n   const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n   const filterChangeHandler = (selectedYear) => {\r\n      setFilteredYear(selectedYear);\r\n   };\r\n\r\n   const filteredExpenses = items.filter((expense) => {\r\n      return expense.date.getFullYear().toString() === filteredYear;\r\n   });\r\n\r\n   return (\r\n      <div>\r\n         <Card className='expenses'>\r\n            <ExpensesFilter\r\n               selected={filteredYear}\r\n               onChangeFilter={filterChangeHandler}\r\n            />\r\n            <ExpensesChart expenses={filteredExpenses} />\r\n            <ExpensesList items={filteredExpenses} />\r\n         </Card>\r\n      </div>\r\n   );\r\n};\r\n","// import React, { useState } from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nexport const ExpenseForm = ({ onSaveExpenseData, onCancel }) => {\r\n   // const [enteredTitle, setEnteredTitle] = useState('');\r\n   // const [enteredAmount, setEnteredAmount] = useState('');\r\n   // const [enteredDate, setEnteredDate] = useState('');\r\n\r\n   // const [userInput, setUserInput] = useState({\r\n   //    enteredTitle: '',\r\n   //    enteredAmount: '',\r\n   //    enteredDate: '',\r\n   // });\r\n\r\n   //use Form De Fernando Herrera mejorado\r\n   const [formValues, handleInputChange, reset] = useForm({\r\n      enteredTitle: '',\r\n      enteredAmount: '',\r\n      enteredDate: '',\r\n   });\r\n\r\n   const { enteredTitle, enteredAmount, enteredDate } = formValues;\r\n\r\n   // const titleChangeHandler = (event) => {\r\n   //    // setEnteredTitle(event.target.value);\r\n   //    // setUserInput({\r\n   //    //    ...userInput,\r\n   //    //    enteredTitle: event.target.value,\r\n   //    // });\r\n   //    // better solution\r\n   //    // setUserInput((prevState) => {\r\n   //    //    console.log('prevState ', prevState);\r\n   //    //    return { ...prevState, enteredTitle: event.target.value };\r\n   //    // });\r\n   // };\r\n\r\n   // const amountChangeHandler = (event) => {\r\n   //    // setEnteredAmount(event.target.value);\r\n   //    // setUserInput({\r\n   //    //    ...userInput,\r\n   //    //    enteredAmount: event.target.value,\r\n   //    // });\r\n   // };\r\n\r\n   // const dateChangeHandler = (event) => {\r\n   //    // setEnteredDate(event.target.value);\r\n   //    // setUserInput({\r\n   //    //    ...userInput,\r\n   //    //    enteredDate: event.target.value,\r\n   //    // });\r\n   // };\r\n\r\n   const submitHandler = (event) => {\r\n      event.preventDefault();\r\n\r\n      const expenseData = {\r\n         title: enteredTitle,\r\n         amount: +enteredAmount,\r\n         date: new Date(enteredDate),\r\n      };\r\n\r\n      onSaveExpenseData(expenseData);\r\n      // setEnteredTitle('');\r\n      // setEnteredAmount('');\r\n      // setEnteredDate('');\r\n      reset();\r\n   };\r\n\r\n   return (\r\n      <form onSubmit={submitHandler}>\r\n         <div className='new-expense__controls'>\r\n            <div className='new-expense__control'>\r\n               <label>Title</label>\r\n               <input\r\n                  type='text'\r\n                  name='enteredTitle'\r\n                  value={enteredTitle}\r\n                  onChange={handleInputChange}\r\n               />\r\n            </div>\r\n            <div className='new-expense__control'>\r\n               <label>Amount</label>\r\n               <input\r\n                  type='number'\r\n                  min='0.01'\r\n                  step='0.01'\r\n                  name='enteredAmount'\r\n                  value={enteredAmount}\r\n                  onChange={handleInputChange}\r\n               />\r\n            </div>\r\n            <div className='new-expense__control'>\r\n               <label>Date</label>\r\n               <input\r\n                  type='date'\r\n                  min='2019-01-01'\r\n                  max='2022-12-31'\r\n                  name='enteredDate'\r\n                  value={enteredDate}\r\n                  onChange={handleInputChange}\r\n               />\r\n            </div>\r\n         </div>\r\n\r\n         <div className='new-expense__actions'>\r\n            <button type='button' onClick={onCancel}>\r\n               Cancel\r\n            </button>\r\n            <button type='submit'>Add Expense</button>\r\n         </div>\r\n      </form>\r\n   );\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n   const [values, setValues] = useState(initialState);\r\n\r\n   const reset = () => {\r\n      setValues(initialState);\r\n   };\r\n\r\n   const handleInputChange = ({ target }) => {\r\n      setValues((prevState) => {\r\n         return {\r\n            ...prevState,\r\n            [target.name]: target.value,\r\n         };\r\n      });\r\n   };\r\n\r\n   return [values, handleInputChange, reset];\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport { ExpenseForm } from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nexport const NewExpense = ({ onAddExpense }) => {\r\n   const [isEditing, setIsEditing] = useState(false);\r\n\r\n   const saveExpenseDataHandler = (enteredExpenseData) => {\r\n      const expenseData = {\r\n         ...enteredExpenseData,\r\n         id: Math.random().toString(),\r\n      };\r\n      onAddExpense(expenseData);\r\n      setIsEditing(false);\r\n   };\r\n\r\n   const startEditingHandler = () => {\r\n      setIsEditing(true);\r\n   };\r\n\r\n   const stopEditingHandler = () => {\r\n      setIsEditing(false);\r\n   };\r\n\r\n   return (\r\n      <div className='new-expense'>\r\n         {!isEditing && (\r\n            <button onClick={startEditingHandler}>Add New Expense</button>\r\n         )}\r\n         {isEditing && (\r\n            <ExpenseForm\r\n               onSaveExpenseData={saveExpenseDataHandler}\r\n               onCancel={stopEditingHandler}\r\n            />\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n","import { useState } from 'react';\nimport { Expenses } from './components/Expenses/Expenses';\nimport { NewExpense } from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n   {\n      id: 'e1',\n      title: 'Toilet Paper',\n      amount: 91.12,\n      date: new Date(2020, 7, 14),\n   },\n   {\n      id: 'e2',\n      title: 'New TV',\n      amount: 799.49,\n      date: new Date(2021, 2, 12),\n   },\n   {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n   },\n   {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 450,\n      date: new Date(2021, 5, 12),\n   },\n];\n\nconst App = () => {\n   const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n   const addExpenseHandler = (expense) => {\n      setExpenses((prevExpenses) => {\n         return [expense, ...prevExpenses];\n      });\n   };\n\n   return (\n      <div>\n         <NewExpense onAddExpense={addExpenseHandler} />\n         <Expenses items={expenses} />\n      </div>\n   );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}